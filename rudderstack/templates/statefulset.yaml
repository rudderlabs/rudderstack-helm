{{- $baseConfig := .Files.Get "rudder-config.yaml" | fromYaml -}}
{{- $rudderConfig := mustMergeOverwrite $baseConfig .Values.backend.config.overrides -}}
apiVersion: {{ include "statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ include "rudderstack.fullname" . }}
  labels:
    {{- include "rudderstack.labels" . | nindent 4 }}
    {{- with .Values.backend.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  serviceName: {{ include "rudderstack.fullname" . }}
  replicas: {{ .Values.global.backendReplicaCount }}
  selector:
    matchLabels:
      {{- include "rudderstack.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "rudderstack.labels" . | nindent 8 }}
        {{- with .Values.backend.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.backend.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- if not .Values.rudderWorkspaceTokenExistingSecret }}
        checksum/rudder-workspace-token: {{ include (print $.Template.BasePath "/secret-rudder-token.yaml") . | sha256sum }}
        {{- end }}
        checksum/rudder-config: {{ $rudderConfig | toYaml | sha256sum }}
        checksum/rudder-bigquery-credentials: {{ .Files.Get "bigquery-credentials.json" | sha256sum }}
        {{- with .Values.backend.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "rudderstack.serviceAccountName" . }}
    {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - configMap:
            defaultMode: 420
            name: {{ include "backend.fullname" . }}-config
          name: backend-config-volume
        {{- if .Values.telegraf_sidecar }}
        {{- if .Values.telegraf_sidecar.enabled}}
        - name: telegraf
          configMap:
            defaultMode: 420
            name: {{ include "telegraf-sidecar.fullname" . }}-config
        {{- end }}
        {{- end }}
        {{- if .Values.gcpCredentialSecret.enabled }}
        - name: google-application-credentials
          secret:
            defaultMode: 420
            secretName: {{ include "rudderstack.fullname" . }}-gcp
        {{- end }}
      containers:
      - name: {{ include "backend.name" . }}
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.version }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        volumeMounts:
        - mountPath: {{ .Values.backend.config.mountPath }}
          name: backend-config-volume
        - mountPath: {{ .Values.backend.persistence.mountPath }}
          name: {{ include "backend.name" . }}-data
        {{- if .Values.gcpCredentialSecret.enabled }}
        - mountPath: {{ .Values.gcpCredentialSecret.mountPath }}
          name: google-application-credentials
        {{- end }}
        ports:
          - name: backend
            containerPort: {{ .Values.backend.service.targetPort }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.backend.service.targetPort }}
          initialDelaySeconds: 120
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.backend.service.targetPort }}
        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}
        env:
          {{- if .Values.backend.extraEnvVars }}
            {{- .Values.backend.extraEnvVars | toYaml | nindent 10 }}
          {{- end }}
          - name: CONFIG_BACKEND_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "rudderstack.rudderWorkspaceTokenSecretName" . }}
                key: rudderWorkspaceToken
            {{- if .Values.backend.controlPlaneJSON }}
          - name: RSERVER_BACKEND_CONFIG_CONFIG_FROM_FILE
            value: "{{ .Values.backend.controlPlaneJSON }}"
          - name:  RSERVER_BACKEND_CONFIG_CONFIG_JSONPATH
            value: "{{ .Values.backend.config.mountPath }}/workspaceConfig.json"
            {{- end}}
          - name: DEST_TRANSFORM_URL
            value: "http://{{ include "transformer.fullname" . }}:{{ .Values.transformer.service.port}}"
          - name: COMPUTE_DB_HOST_IN_K8S
            value: "true"
          - name: POSTGRES_POD_NAME
            value: "{{ .Release.Name }}-{{ .Values.postgresql.nameOverride }}"
          - name: POSTGRES_HEADLESS_SVC
            value: "{{ .Release.Name }}-{{ .Values.postgresql.nameOverride }}-headless"
          - name: JOBS_DB_HOST
            value: "This is expected to be set by docker entrypoint script"
          - name: JOBS_DB_USER
            value: "{{ .Values.postgresql.postgresqlUsername }}"
          - name: JOBS_DB_PORT
            value: "{{ .Values.postgresql.service.port }}"
          - name: JOBS_DB_DB_NAME
            value: "{{ .Values.postgresql.postgresqlDatabase }}"
          - name: JOBS_DB_PASSWORD
            value: "{{ .Values.postgresql.postgresqlPassword }}"
          - name: INSTANCE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: KUBE_NAMESPACE
            value: {{ .Release.Namespace }}
        command: ["/docker-entrypoint.sh"]
        args: ["/bin/sh","-c","/wait-for $JOBS_DB_HOST:$(JOBS_DB_PORT) {{ if (include "statsd.enabled" .) -}} -- /wait-for -u {{ include "statsd.url" .}} {{- end }} -- /rudder-server"]
        {{- if .Values.telegraf_sidecar.enabled}}
      - name: {{ include "telegraf-sidecar.name" .}}
        image: "{{ .Values.telegraf_sidecar.image.repo }}:{{ .Values.telegraf_sidecar.image.tag }}"
        imagePullPolicy: {{ default "" .Values.telegraf_sidecar.image.pullPolicy | quote }}
        env:
          - name: KUBE_NAMESPACE
            value: {{ .Release.Namespace }}
        command: ["telegraf"]
        args: ["--config", "{{.Values.telegraf_sidecar.config.mountPath}}/telegraf.conf"]
        {{- if .Values.telegraf_sidecar.resources }}
        resources:
        {{- toYaml .Values.telegraf_sidecar.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
          - name: telegraf
            mountPath: {{.Values.telegraf_sidecar.config.mountPath}}
  {{- end}}


  volumeClaimTemplates:
    - metadata:
        name: {{ include "backend.name" . }}-data
    {{- with .Values.backend.persistence.annotations }}
      annotations:
      {{- range $key, $value := . }}
        {{ $key }}: {{ $value }}
      {{- end }}
    {{- end }}
      spec:
        storageClassName: {{ .Values.global.storageClass }}
        accessModes:
        {{- range .Values.backend.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.backend.persistence.size | quote }}
